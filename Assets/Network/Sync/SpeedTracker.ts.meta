fileFormatVersion: 2
guid: 355d3e33bd94343cb959ef6e53ddcca8
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nclass SpeedTracker extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.speed
    = 0;\r\n    }\r\n    // NOTE: Let''s use the Awake() instead of the Start().
    It seems that the Start() is not called.\r\n    Awake() {\r\n        this.lastPosition
    = this.transform.position;\r\n    }\r\n    // NOTE: It is important to use LateUpdate()
    instead of Update(), because the order of execution of Update() is not guaranteed,
    resulting in a very high variance in the speed.\r\n    LateUpdate() {\r\n       
    const currentPosition = this.transform.position;\r\n        const delta = UnityEngine_1.Vector3.op_Subtraction(currentPosition,
    this.lastPosition);\r\n        delta.y = 0;\r\n        this.speed = delta.magnitude
    / UnityEngine_1.Time.deltaTime;\r\n        this.lastPosition = currentPosition;\r\n   
    }\r\n}\r\nexports.default = SpeedTracker;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlZWRUcmFja2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU3BlZWRUcmFja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQTRDO0FBRTVDLGlEQUFzRDtBQUV0RCxNQUFxQixZQUFhLFNBQVEscUNBQXFCO0lBQS9EOztRQUNTLFVBQUssR0FBVyxDQUFDLENBQUM7SUFnQjNCLENBQUM7SUFiQywrRkFBK0Y7SUFDL0YsS0FBSztRQUNILElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUM7SUFDOUMsQ0FBQztJQUVELCtLQUErSztJQUMvSyxVQUFVO1FBQ1IsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUM7UUFDaEQsTUFBTSxLQUFLLEdBQUcscUJBQU8sQ0FBQyxjQUFjLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN6RSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNaLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLFNBQVMsR0FBRyxrQkFBSSxDQUFDLFNBQVMsQ0FBQztRQUM5QyxJQUFJLENBQUMsWUFBWSxHQUFHLGVBQWUsQ0FBQztJQUN0QyxDQUFDO0NBQ0Y7QUFqQkQsK0JBaUJDIn0=","assetPath":"Assets/Network/Sync/SpeedTracker.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"speed","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"SpeedTracker","description":""},"isCompiled":true}'
  typescriptHash: e535305e672a53d0306f52c274881376
  onlyWriteTrigger: 0
